input{
	file {
		type => "feature"
		path => ["/data/input/geojson/*.geojson"]
		start_position => "beginning"
#		sincedb_path => "/data/sincedb/geojson"
		sincedb_path => "/dev/null"
	}
}


filter {
    if [type] == "feature" {
        if !("splitted_geojson_features" in [tags]) {
            json {
                source => "message"
            }
            split { 
                field => "features"
                add_tag => ["splitted_geojson_features"]
            }
        }

    }
    if ( "splitted_geojson_features" in [tags] ) {
        grok {
				match => { "path" => "%{GREEDYDATA}/%{GREEDYDATA:filename}.geojson" }
		}
        mutate{
            add_field => {"category" => "%{filename}"}
		    add_field => {"[location][lat]" => "%{[features][geometry][coordinates][0]}"}
			add_field => {"[location][lon]" => "%{[features][geometry][coordinates][1]}"}
		    add_field => {"id" => "%{[features][id]}"}
		    add_field => {"name" => "%{[features][properties][FACILITY_N]}"}
		    add_field => {"description" => "%{[features][properties][FAC_DES]}"}
		    add_field => {"properties" => "%{[features][properties]}"}
		    convert => { "[location][lat]" => "float" }
			convert => { "[location][lon]" => "float" }
			remove_field => [ "message", "totalFeatures", "type", "features", "host", "path"]
        }
    }
}

output {
    if ( "splitted_geojson_features" in [tags] ) {
        file {
            codec => json
            flush_interval => 3
            path => "data/output/geojson/geojson.json"
        }
        elasticsearch {
			codec => json
			host => "52.29.7.137"
			protocol => "transport"
			index => "geojson"
			template => "/data/input/geojson/template.json"
       		document_type => "feature"
   			max_retries => 10
		}  
    }
}

